```{r include=FALSE}
suppressPackageStartupMessages(library(shiny))
suppressPackageStartupMessages(library(leaflet))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(DT))
suppressPackageStartupMessages(library(reactable))

# Load json
sites <- jsonlite::read_json("https://raw.githubusercontent.com/iobis/edna-tracker-data/data/generated.json")
sites_list <- sites$sites
sites_samples <- sites$samples

sites_names <- sapply(sites_list, function(x) x$name)
sites_names <- sites_names[sites_names != "Sanganeb Marine National Park and Dungonab Bay â€“ Mukkawar Island Marine National Park"]
sites_names <- sites_names[order(sites_names)]

localities <- sites_samples %>% bind_rows() %>% select(area_name, area_locality, parent_area_name, station, lon = area_longitude, lat = area_latitude)

groups <- read.csv("data/supporting_data/groups.csv")
groups_names <- c("all species", unique(groups$group))

taxonLevels <- c("ASV","kingdom","phylum","order","class","family","genus", "species")

alpha_measure <- c("Observed", "Chao1", "Shannon", "Simpson")

beta_measure <- c("bray", "jaccard")

plot_type<-c("relative abundance", "reads")

#iucn <- read.csv("data/supporting_data/redlist.csv")
#iucn_names <- c("all species", unique(iucn$category))
iucn_names <- c("all species", "CR", "EN", "VU", "NT", "LC", "DD")
#show_primers<-c(FALSE, TRUE)

```

<!-- This goes on top of the page after navbar - map-->
```{r}
#| padding: 0px
#| expandable: false
htmltools::includeCSS("www/styles.css")
htmltools::includeScript("www/script.js")
waiter::useWaiter()

#leafletOutput("mainMap")
htmltools::tags$div(
  htmltools::div(
    selectInput("higherGeography", "Site:", c("Select a site" = "", sites_names)),
    class = "navbar-dropdown-top",
    id = "top-selector-new"
   ),
  leafletOutput("mainMap"), id = "top-selector-parent"
)
```


<!-- Each level 1 header becomes a page on the dashboard -->    
# Home {orientation="rows" scrolling="true"}

## {.toolbar}

``` {r}
#<span style="color: #f9f9f9">invisible</span>
htmltools::span(
  htmltools::span(
    textOutput("whs_front_code"),
    style = "display: flex; font-weight: bold; font-color: #cccccc;"
  ), htmltools::HTML("&nbsp;"), htmlOutput("whs_front_website"), style = "display: flex;"
)
```

## Row 1 {.flow}

### Column 1 {width=60%}

<!-- Temporary workaround, please don't remove-->

```{=html}
<script>
// Select the parent div with the specified classes
const parentDiv = document.querySelector('.toolbar-content.html-fill-item.html-fill-container');

// Check if the parent div exists
if (parentDiv) {
  // Select the immediate child of the parent div
  const childDiv = parentDiv.firstElementChild;

  // Check if the child div exists
  if (childDiv) {
    // Remove the style attribute from the child div
    childDiv.removeAttribute('style');
  }
}

// TOP DIV ADJUSTMENT
// Modification 1: Remove 'dashboard-fill' from the body class
var body = document.querySelector('body');
body.classList.remove('dashboard-fill');

// Modification 2: Remove 'bslib-page-fill' and add 'dashboard-scrolling' to the div
var div2 = document.querySelector('.page-layout-custom.quarto-dashboard-content.bslib-gap-spacing.html-fill-container.bslib-page-fill.quarto-dashboard-pages');
div2.classList.remove('bslib-page-fill');
div2.classList.add('dashboard-scrolling');

// Modification 3: Add 'grid-template-rows' to the style of another div
var div3 = document.querySelector('.bslib-grid-item.html-fill-item.tab-content.bslib-grid');
div3.style.gridTemplateRows = 'minmax(3em, max-content)';
</script>
```

`r tags$div(class="site-title", textOutput("higherGeography"))`

`r tags$div(class="site-text", uiOutput("siteDescription"))`

#### Row {.context-info}

`r tags$div(HTML(paste0('<span><i class="fa fa-calendar" style = "color:#3D3D3D;"></i> Event date: ', textOutput("eventDate", inline = T), '</span>')))`

`r tags$div(HTML(paste0('<span><i class="fa fa-dna" style = "color:#3D3D3D;"></i> Number of samples: ', textOutput("eventSamples", inline = T), '</span>')))`


### Column 2 {width=40% .flow}

```{r}
library(bslib)

value_box(
  title = "Number of species",
  value = textOutput("value_box_species"),
  showcase = icon("shrimp", class = 'fa-3x'),#bsicons::bs_icon("bank2"),
  theme = "bg-gradient-blue-indigo"
)

```

#### Row

```{r}

value_box(
  title = "Number of fishes",
  value = textOutput("value_box_fish"),
  showcase = icon("fish", class = 'fa-3x'),#bsicons::bs_icon("bank2"),
  theme = "bg-gradient-indigo-blue"
)
```

```{r}

value_box(
  title = "Number of mammals",
  value = textOutput("value_box_mammals"),
  showcase = icon("otter", class = 'fa-3x'),#bsicons::bs_icon("bank2"),
  theme = "bg-gradient-indigo-blue"
)
```

#### Row

```{r}

value_box(
  title = "Number of sharks",
  value = textOutput("value_box_sharks"),
  showcase = htmltools::img(src = "images/icons/shark.svg",
  width = "80px", height = "100%", opacity = 0.3),#bsicons::bs_icon("bank2"),
  theme = "bg-gradient-indigo-blue"
)
```

```{r}

value_box(
  title = "Number of turtles",
  value = textOutput("value_box_turtles"),
  showcase = htmltools::img(src = "images/icons/turtle.svg",
  width = "50px", height = "100%", opacity = 0.3),#bsicons::bs_icon("bank2"),
  theme = "bg-gradient-indigo-blue"
)
```

#### Row

```{r}

value_box(
  title = "IUCN threatened",
  value = textOutput("value_box_iucn"),
  showcase = icon("circle-exclamation", class = 'fa-3x'),#bsicons::bs_icon("bank2"),
  theme = "bg-gradient-blue-teal",
  full_screen = FALSE
)
```

## Row 2 {.flow}

```{r}
htmlOutput("imageGalleryFront")
```

<br>