---
title: "eDNA expeditions"
format: 
  dashboard:
    expandable: false
include-in-header:
  - text: |
      <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
      <link rel="preconnect" href="https://fonts.googleapis.com">
      <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
      <link href="https://fonts.googleapis.com/css2?family=Mulish:ital,wght@0,200..1000;1,200..1000&display=swap" rel="stylesheet">
theme:
  - cosmo
  - custom.scss
mainfont: Mulish
server: shiny
---

<!-- This just load/prepare -->
```{r include=FALSE}
library(shiny)
library(leaflet)
library(dplyr)

# Load json
sites <- jsonlite::read_json("https://raw.githubusercontent.com/iobis/edna-tracker-data/data/generated.json")
sites_list <- sites$sites
sites_samples <- sites$samples

sites_names <- sapply(sites_list, function(x) x$name)

localities <- sites_samples %>% bind_rows() %>% select(area_name, area_locality, station, lon = area_longitude, lat = area_latitude)
```

<!-- This goes on top of the page after navbar - map-->
```{r}
#| padding: 0px
#| expandable: false
htmltools::includeCSS("styles.css")

leaflet(width = "100%") %>%
   addTiles(urlTemplate = "https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png") %>%
   addMarkers(~lon, ~lat, popup = ~as.character(area_name), label = ~as.character(area_name),
              data = localities, clusterOptions = markerClusterOptions()) %>%
   setView(0, 0, zoom = 2)
```


<!-- Each level 1 header becomes a page on the dashboard -->    
# Home {orientation="rows" scrolling="true"}

## {.toolbar}

```{r}
selectInput("higherGeography", "Site:", sites_names)
```

## Row 1 {.flow}

### Column 1 {width=60%}

<!-- Temporary workaround, please don't remove-->

```{=html}
<script>
// Select the parent div with the specified classes
const parentDiv = document.querySelector('.toolbar-content.html-fill-item.html-fill-container');

// Check if the parent div exists
if (parentDiv) {
  // Select the immediate child of the parent div
  const childDiv = parentDiv.firstElementChild;

  // Check if the child div exists
  if (childDiv) {
    // Remove the style attribute from the child div
    childDiv.removeAttribute('style');
  }
}
</script>
```

`r tags$div(class="site-title", textOutput("higherGeography"))`

`r tags$div(class="site-text", textOutput("siteDescription"))`

#### Row {.context-info}

`r tags$div(HTML(paste0('<span><i class="fa fa-calendar" style = "color:#3D3D3D;"></i> Event date: ', textOutput("eventDate", inline = T), '</span>')))`

`r tags$div(HTML(paste0('<span><i class="fa fa-dna" style = "color:#3D3D3D;"></i> Number of samples: ', textOutput("eventSamples", inline = T), '</span>')))`


### Column 2 {width=40% .flow}

```{r}
library(bslib)
value_box(
  title = "Number of species",
  value = "10",
  showcase = icon("shrimp", class = 'fa-3x'),#bsicons::bs_icon("bank2"),
  theme = "bg-gradient-blue-indigo"
)
```

#### Row

```{r}
value_box(
  title = "Number of fishes",
  value = "100",
  showcase = icon("fish", class = 'fa-3x'),#bsicons::bs_icon("bank2"),
  theme = "bg-gradient-indigo-blue"
)
```

```{r}
value_box(
  title = "Number of mammals",
  value = "100",
  showcase = icon("otter", class = 'fa-3x'),#bsicons::bs_icon("bank2"),
  theme = "bg-gradient-indigo-blue"
)
```

#### Row

```{r}
value_box(
  title = "IUCN threatened",
  value = "100",
  showcase = icon("circle-exclamation", class = 'fa-3x'),#bsicons::bs_icon("bank2"),
  theme = "bg-gradient-blue-teal",
  full_screen = FALSE
)
```

## Row 2 {.flow}

```{r}
htmlOutput("imageGallery")
```

<br>


<!-- Orientation can be either columns or rows; each level 2 header becomes a card-->
# Taxonomy {orientation="columns" scrolling="true"}

## Column

<!-- Content can be either markdown...-->
Test page 2

## Column 

<!-- Code/output...-->
```{r}
plot(x = 1, y = 1)
```

# Diversity metrics {orientation="columns" scrolling="true"}

## Column

Test page 2

## Column 

<!-- Or a mix of both-->
Some text

```{r}
plot(x = 1, y = 1)
```

# Species {orientation="columns" scrolling="true"}

## Column

Test page 2

## Column 

```{r}
plot(x = 1, y = 1)
```

# Sample {orientation="columns" scrolling="true"}

## Column

Test page 2

## Column 

```{r}
plot(x = 1, y = 1)
```

<!-- Done just when the server start, shared across users-->
```{r}
#| context: server-start

sites_info <- read.table("data/sites_description.txt")
```

<!-- Shiny server component -->
```{r}
#| context: server

library(bslib)
source("R/image-gallery.R")

output$higherGeography <- renderText({
  sel_site <- sites_info[sites_info$name == input$higherGeography,]
  sel_site$name
})

output$siteDescription <- renderText({
  sel_site <- sites_info[sites_info$name == input$higherGeography,]
  sel_site$description
})

output$eventDate <- renderText({"2024-05-01"})
output$eventSamples <- renderText({"1000"})


#https://raw.githubusercontent.com/iobis/edna-tracker-data/data/generated.json


output$imageGallery <- renderUI({
  species = c("Trachinotus baillonii", "Anguilla rostrata", "Liparis liparis")
  generate_gallery(species, "data/images.txt")
})

```

